/* Component Start */
.input {
	position: relative;
	z-index: 1;
	display: inline-block;
	margin: 0;
	//max-width: 400px;
	//width: calc(100% - 2em);
  width: 100%;
	vertical-align: top;
  font-size: 1.2rem;
  box-sizing: border-box;;
}

.input__field {
	position: relative;
	display: block;
	float: right;
	padding: 0.8em;
	width: 60%;
	border: none;
	border-radius: 0;
	color: $text-color;
	font-weight: bold;
	-webkit-appearance: none;
  box-sizing: border-box; /* for box shadows to show on iOS */
  font-size: 1em;
}

.input__field:focus {
	outline: none;
}

.input__label {
	display: inline-block;
	float: right;
	padding: 0 1em;
	width: 40%;
	color: $text-color;
	font-weight: bold;
	font-size: 70.25%;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
  box-sizing: border-box;
}

.input__label-content {
	position: relative;
	display: block;
	padding: 1.6em 0;
	width: 100%;
  box-sizing: border-box;
}

.input--hoshi {
	overflow: hidden;
}

.input__field--hoshi {
	margin-top: 1em;
	padding: 0.85em 0.15em;
	width: 100%;
	background: transparent;
	color: $grey-color;
}

.input__label--hoshi {
	position: absolute;
	bottom: 0;
	left: 0;
	padding: 0 0.25em;
	width: 100%;
	height: calc(100% - 1em);
	text-align: left;
	pointer-events: none;
}

.input__label-content--hoshi {
	position: absolute;
}

.input__label--hoshi::before,
.input__label--hoshi::after {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: calc(100% - 10px);
	border-bottom: 1px solid $grey-color-light;
}

.input__label--hoshi::after {
	margin-top: 0px;
	border-bottom: 4px solid $secondary-color;
	-webkit-transform: translate3d(-100%, 0, 0);
	transform: translate3d(-100%, 0, 0);
	-webkit-transition: -webkit-transform 0.3s;
	transition: transform 0.3s;
}

.input__field--hoshi:focus + .input__label--hoshi::after,
.input__field--hoshi.filled + .input__label--hoshi::after {
	-webkit-transform: translate3d(0, 0, 0);
	transform: translate3d(0, 0, 0);
}

.input__field--hoshi:focus + .input__label--hoshi .input__label-content--hoshi,
.input__field--hoshi.filled + .input__label--hoshi .input__label-content--hoshi {
	-webkit-animation: anim-1 0.3s forwards;
	animation: anim-1 0.3s forwards;
}

@-webkit-keyframes anim-1 {
	50% {
		opacity: 0;
		-webkit-transform: translate3d(1em, 0, 0);
		transform: translate3d(1em, 0, 0);
	}
	51% {
		opacity: 0;
		-webkit-transform: translate3d(-1em, -40%, 0);
		transform: translate3d(-1em, -40%, 0);
	}
	100% {
		opacity: 1;
		-webkit-transform: translate3d(0, -40%, 0);
		transform: translate3d(0, -40%, 0);
	}
}


@keyframes anim-1 {
	50% {
		opacity: 0;
		-webkit-transform: translate3d(1em, 0, 0);
		transform: translate3d(1em, 0, 0);
	}
	51% {
		opacity: 0;
		-webkit-transform: translate3d(-1em, -40%, 0);
		transform: translate3d(-1em, -40%, 0);
	}
	100% {
		opacity: 1;
		-webkit-transform: translate3d(0, -40%, 0);
		transform: translate3d(0, -40%, 0);
	}
}

.form-group {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;
	margin-bottom: 1em;

	&:last-child {
		margin: 2em 0;
		text-align: center;
		display: block;
	}
}

.group-label {
	font-size: 0.9rem;
	font-weight: bold;
	display: block;
	padding: 0.5em 0.25em;
}

.label-required:after {
	content: "*";
	color: red;
	display: inline-block;
	margin-left: 2px;
}

.control {
	font-size: 1rem;
	position: relative;
	display: inline-block;
	width: 50%;
	box-sizing: border-box;
	margin-top: 15px;
	padding-left: 30px;
	font-weight: bold;
	color: $grey-color;
	cursor: pointer;

	@include media-query($on-palm) {
		width: 100%;
	}
}

.control input {
	position: absolute;
	z-index: -1;
	opacity: 0;
}

.control__indicator {
	position: absolute;
	top: 2px;
	left: 0;
	width: 20px;
	height: 20px;
	background: $grey-color-light;
}

.control--radio .control__indicator {
	border-radius: 50%;
}

/* Hover and focus states */
.control:hover input ~ .control__indicator,
.control input:focus ~ .control__indicator {
	background: lighten($grey-color-light, 10%);
}

/* Checked state */
.control input:checked ~ .control__indicator {
	background: $secondary-color;
}

/* Hover state whilst checked */
.control:hover input:checked ~ .control__indicator,
.control input:checked:focus ~ .control__indicator {
	background: lighten($secondary-color, 10%);
}
/* Check mark */
.control__indicator:after {
	position: absolute;
	display: none;
	content: '';
}

/* Show check mark */
.control input:checked ~ .control__indicator:after {
	display: block;
}


/* Checkbox tick */
.control--checkbox .control__indicator:after {
	top: 4px;
	left: 8px;
	width: 3px;
	height: 8px;
	transform: rotate(45deg);
	border: solid #fff;
	border-width: 0 2px 2px 0;
}

/* Disabled tick colour */
.control--checkbox input:disabled ~ .control__indicator:after {
	border-color: #7b7b7b;
}

/* Radio button inner circle */
.control--radio .control__indicator:after {
	top: 7px;
	left: 7px;
	width: 6px;
	height: 6px;
	border-radius: 50%;
	background: #fff;
}
